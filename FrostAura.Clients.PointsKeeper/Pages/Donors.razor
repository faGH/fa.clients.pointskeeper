@page "/donors"

<PageTitle>Donations</PageTitle>

@using FrostAura.Clients.PointsKeeper.Data
@using FrostAura.Clients.PointsKeeper.Shared.Models
@using FrostAura.Clients.PointsKeeper.Components.Enums.DynamicForm
@inject PointsKeeperDbContext dbContext
@inject IJSRuntime JsRuntime

<h1>All Donors</h1>
<p>View and manage all donors in order to calculate the total donations as player earn points.</p>

@if (donors == null)
{
    <p><em>Loading...</em></p>
}
else if (!donors.Any())
{
    <hr>
    <p>No donors yet. Let's add some!</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Amount Per Point</th>
                <th>Dues (For @GetTotalPoints() Points)</th>
                <th>Edit</th>
                <th>Remove</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var donor in donors)
            {
                <tr>
                    <td>@donor.Id</td>
                    <td>@donor.Name</td>
                    <td>R @donor.Amount</td>
                    <td style="color:crimson">R @(Math.Round(GetTotalPoints() * donor.Amount, 2))</td>
                    <td><button class="icon" @onclick="() => FocusOnEditDonor(donor)"><span class="oi oi-pencil" aria-hidden="true"></span></button></td>
                    <td><button class="icon" @onclick="() => OnRemoveDonorAsync(donor)"><span class="oi oi-circle-x" aria-hidden="true"></span></button></td>
                </tr>
            }
        </tbody>
    </table>
}

<button @onclick="FocusOnCreateNewDonor">
    <span class="oi oi-plus" aria-hidden="true"></span> New Donor
</button>

@if (newDonor != default)
{
    <hr>
    <h1>New Donor</h1>
    <DynamicForm TDataContextType="Donor"
                 DataContext="newDonor"
                 OnValidSubmit="OnAddDonorAsync"
                 SubmitButtonText="Add Donor"
                 ValidationSummaryPosition="ValidationSummaryPosition.FormBottom"></DynamicForm>
}

@if (editDonor != default)
{
    <hr>
    <h1>Edit Donor</h1>
    <DynamicForm TDataContextType="Donor"
                 DataContext="editDonor"
                 OnValidSubmit="OnEditDonorAsync"
                 SubmitButtonText="Save Donor"
                 ValidationSummaryPosition="ValidationSummaryPosition.FormBottom"></DynamicForm>
}