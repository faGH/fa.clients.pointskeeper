@page "/players"

<PageTitle>Players</PageTitle>

@using FrostAura.Clients.PointsKeeper.Data
@using FrostAura.Clients.PointsKeeper.Shared.Models
@using FrostAura.Clients.PointsKeeper.Components.Enums.DynamicForm
@inject PointsKeeperDbContext dbContext
@inject IJSRuntime JsRuntime

<h1>All Players</h1>
<p>View and manage players.</p>

@if (players == null)
{
    <p><em>Loading...</em></p>
}
else if (!players.Any())
{
    <hr>
    <p>No players yet. Let's add some!</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Team</th>
                <th>Edit</th>
                <th>Remove</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var player in players)
            {
                <tr>
                    <td>@player.Id</td>
                    <td>@player.Name</td>
                    <td>@player.Team.Name</td>
                    <td><button @onclick="() => FocusOnEditPlayer(player)"><span class="oi oi-pencil" aria-hidden="true"></span></button></td>
                    <td><button @onclick="() => OnRemovePlayerAsync(player)"><span class="oi oi-circle-x" aria-hidden="true"></span></button></td>
                </tr>
            }
        </tbody>
    </table>
}

<button @onclick="FocusOnCreateNewPlayer">
    <span class="oi oi-plus" aria-hidden="true"></span> Create a New Player
</button>

@if (newPlayer != default)
{
    <hr>
    <h1>New Player</h1>
    <DynamicForm TDataContextType="Player"
                 DataContext="newPlayer"
                 OnValidSubmit="OnAddPlayerAsync"
                 SubmitButtonText="Add Player"
                 PropertyEffects="formPropertyEffects"
                 ValidationSummaryPosition="ValidationSummaryPosition.FormBottom"></DynamicForm>
}

@if (editPlayer != default)
{
    <hr>
    <h1>Edit Player</h1>
    <DynamicForm TDataContextType="Player"
                 DataContext="editPlayer"
                 OnValidSubmit="OnEditPlayerAsync"
                 SubmitButtonText="Save Player"
                 PropertyEffects="formPropertyEffects"
                 ValidationSummaryPosition="ValidationSummaryPosition.FormBottom"></DynamicForm>
}